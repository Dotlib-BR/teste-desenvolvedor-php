<?php

namespace Tests\Feature\Dashboard;

use App\Models\Purchase;
use App\Models\User;
use Tests\TestCase;

class PurchaseTest extends TestCase
{
    protected $user;
    protected $purchase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->user = factory(User::class)->create();
        $this->purchase = factory(Purchase::class)->create();
    }

    /**
     * Teste básico que simula quando o usuário visita a página de listagem de pedidos de compra.
     *
     * @return void
     */
    public function testIndex()
    {
        $this->actingAs($this->user)
            ->get(route('dashboard.purchases.index'));

        $this->assertAuthenticated();
    }

    /**
     * Teste básico que simula quando o usuário visita o formulário de cadastro/edição de pedidos de compra.
     *
     * @return void
     */
    public function testCreate()
    {
        $this->actingAs($this->user)
            ->get(route('dashboard.purchases.create'));

        $this->assertAuthenticated();
    }

    /**
     * Teste básico que simula quando o usuário visita o formulário de cadastro/edição de um determinado pedido de compra.
     *
     * @return void
     */
    public function testEdit()
    {
        $this->actingAs($this->user)
            ->get(route('dashboard.purchases.edit', $this->purchase->id));

        $this->assertAuthenticated();
    }

    /**
     * Teste básico que simula quando o usuário visita a tela de visualização de um determinado pedido de compra.
     *
     * @return void
     */
    public function testShow()
    {
        $this->actingAs($this->user)
            ->get(route('dashboard.purchases.show', $this->purchase->id));

        $this->assertAuthenticated();
    }
}
